**权尚浩然型有限状态机**(下称qshr有限状态机)是一种不同于moore型和mealy型状态机的一种状态机，它摒弃了组合逻辑部分，将可能的**所有状态节点各用一个寄存器来表示**，直接用寄存器之间的连接关系来表示状态节点之间的转移关系。

qshr有限状态机比起另两类状态机最大的优势是，在设计时，我们不需要对各个状态进行编码（这是相对不直观的），**所有在草稿纸上画的转移都可以直接在设计界面通过连线来完成**。

qshr有限状态机具体实现起来有很多方法，它们只有细节上的区别，这里提供一种。我们先确定好问题中有几个状态（往往这会在题目中直接给出），然后在设计界面摆放同样数量的寄存器，表示各个状态节点。寄存器的位数为1，对于任意一个寄存器，当前存1表示目前状态在当前寄存器，存0表示不在当前寄存器。显然任意时刻所有寄存器中有且仅有一个存1。

然后，我们进行状态转移的设计。每个节点会因为输入不同向不同节点进行转移，我们在每个寄存器输出端放置一个多路分配器，用输入作为其选择接口，将不同出口连向对应转移过去的节点，转移接收时我们采用逻辑或门的方式，因为可能有很多状态都能往一个节点转移，只要有一个是1便应置为1。

对于reset操作以及一开始的初始化，图中可能没有存1的寄存器，我们需要一个**掷入装置**，它的设计类似于状态机的非零初始化。

对于输出结果的部分，qshr状态机只需要在终止节点处为1时输出1即可。

我们来看一道例题，P0_L1_navigation_2020
![image.png](/assets/cscore-image/21371064/69ec0162-55b8-49ad-b52e-d3e12975d7ec/image.png)

状态节点一共5个，我们各用一个寄存器表示，右上角处到达B时输出1，我们在该节点输出端连接题目中要求的输出接口arrive即可，
上下左右转移，我们按之前所述的方法进行接线，并在左下角加入掷入装置。

下面是效果图：

![image.png](/assets/cscore-image/21371064/3cd64eff-1cf5-438b-ad50-7fd38671eb67/image.png)
![image.png](/assets/cscore-image/21371064/7b771fb6-398b-4cd1-b17a-c8c1e5c793a1/image.png)

若要实现在qshr有限状态机上moore型和mealy型的转化，只需要将输出的连线分别设置为终止节点的后和前即可。

耗时一晚上进行研发，求一波**点赞+加精**。
（这么良心的技术分享贴，不加分可惜了。）